name: Automation Build and Release

on:
  push:
    branches:
      - buid_yml

jobs:
  test:
    name: Automation test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout automation code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Create and activate venv
        run: |
          python3.9 -m venv venv
          source venv/bin/activate

      - name: Install frameworks and tools
        run: |
          npm i --location=global appium
          appium driver install uiautomator2
          sudo apt-get update
          sudo apt-get install -y android-sdk-platform-tools
          sudo apt install openjdk-11-jdk

      - name: Set up environment variables
        run: |
          echo 'export ANDROID_HOME=~/Library/Android/sdk' >> $HOME/.bashrc
          echo 'export JAVA_HOME=/usr/lib/jvm/openjdk-11' >> $HOME/.bashrc
          echo 'export PATH=$PATH:$ANDROID_HOME/tools/bin' >> $HOME/.bashrc
          echo 'export PATH=$PATH:$ANDROID_HOME/platform-tools' >> $HOME/.bashrc
          source $HOME/.bashrc

      - name: Install Android SDK components
        run: $ANDROID_HOME/tools/bin/sdkmanager --install "platform-tools" "emulator"

      - name: Install dependencies
        run: pip install -r requirements.txt

      # - name: Checkout application code
      #   uses: actions/checkout@v4
      #   with:
      #     repository: huynhlan21/test
      #     ref: build
      #     path: App

      # - name: Download APK file
      #   run: |
      #     wget -O application.apk https://expo.dev/artifacts/eas/jhDba2fHiueUkaChYeSu2s.apk
      #     mkdir -p App
      #     mv application.apk App/

      - name: List the emulator
        run: $ANDROID_HOME/tools/bin/sdkmanager --install "platform-tools" "emulator"
        id: list_avds

      - name: Create emulator
        run: |
          echo "no" | android create avd --force --name test_emulator --abi google_apis/x86 --package 'system-images;android-29;google_apis;x86'
        if: steps.list_avds.outputs.stdout != 'test_emulator'

      - name: Start the emulator
        run: emulator -avd test_emulator

      - name: Wait for the emulator to start
        run: |
          emulator_ready=false
          while [ "$emulator_ready" != "true" ]; do
            output=$(adb devices)
            if echo "$output" | grep -q "emulator-"; then
              emulator_ready=true
            fi
            sleep 2
          done

      - name: Connect to the emulator
        run: adb connect emulator-5554

      - name: Check connected devices
        run: adb devices

      - name: Run Robot Framework tests
        run: |
          robot -d Reports --loglevel TRACE UiTests/TestSuite.robot

      - name: Archive test artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Robot Framework Reports
          path: Reports

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: Robot Framework Results
          path: Reports/output.xml

      - name: Deactivate and remove virtual environment
        run: |
          deactivate
          rm -rf venv
